/*

    ** {{ warn }} **

    Domain: {{ domain.name }}
    Description: {{ domain.desc }}

*/

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Encodings.Web;
using System.Text.Unicode;
using System.Collections.Generic;
using System.Diagnostics;

namespace loglab_{{ domain.name }}
{
    {% for ename in events.keys() %}
    /// <summary>
    ///  {{ events[ename][-1][1]['desc'] }}
    /// </summary>
    public class {{ ename }}
    {
        {% set fields = events[ename][-1][1]['fields'] %}
        {% set rfields = fields | required %}
        {% set ofields = fields | optional %}
        {% set cfields = fields | const %}
        public const string Event = "{{ ename }}";
        {% for fname in fields.keys() %}{% if fname != 'DateTime' and fname not in cfields %}        // {{ events[ename][-1][1]['fields'][fname][-1][1]['desc'] }}
        {% set field = fields[fname][-1][1] %}
        {% if type(field) in ('DateTime') %}
        public {{ type(field) }} {{ fname }};
        {% elif fname not in cfields %}
        public {{ type(field) }}? {{ fname }} = null;
        {% endif %}{% endif %}{% endfor %}
        public static JsonSerializerOptions options = new JsonSerializerOptions
        {
            Encoder = JavaScriptEncoder.UnsafeRelaxedJsonEscaping
        };

        public {{ ename }}({% for fname in rfields.keys() %}{% set field = fields[fname][-1][1] %}{{ type(field) }} _{{ fname }}{% if not loop.last %}, {% endif %}{% endfor %})
        {
            Reset({% for fname in rfields.keys() %}{% set field = fields[fname][-1][1] %}_{{ fname }}{% if not loop.last %}, {% endif %}{% endfor %});
        }
        public void Reset({% for fname in rfields.keys() %}{% set field = fields[fname][-1][1] %}{{ type(field) }} _{{ fname }}{% if not loop.last %}, {% endif %}{% endfor %})
        {
            {% for fname in rfields.keys() %}
            {% set field = rfields[fname][-1][1] %}
            {{ fname }} = _{{ fname }};
            {% endfor %}
            {% for fname in ofields.keys() %}
            {% if fname not in cfields %}
            {% set field = fields[fname][-1][1] %}
            {% if type(field) == 'string' %}
            {{ fname }} = default(string);
            {% elif type(field) == 'DateTime' %}
            {{ fname }} = DateTime.MinValue;
            {% else %}
            {{ fname }} = null;
            {% endif %}{% endif %}
            {% endfor %}
        }
        public string Serialize()
        {
            List<string> fields = new List<string>();
            {% for fname in fields %}
            {% if fname != 'DateTime' %}
            {% set field = fields[fname][-1][1] %}
            {% if fname in cfields %}
            fields.Add($"\"{{ fname }}\": {{ cfields[fname][1] }}");
            {% elif fname in rfields %}
            {% if type(field) == 'string' %}
            Debug.Assert({{ fname }} != null);
            {{ fname }} = JsonSerializer.Serialize({{ fname }}, {{ename}}.options);
            {% elif type(field) == 'DateTime' %}
            Debug.Assert({{ fname }} != DateTime.MinValue);
            string {{ fname }}_ = {{ fname }}.ToString("yyyy-MM-ddTHH:mm:ss.fffzzz");
            {% else %}
            Debug.Assert({{ fname }}.HasValue);
            {% endif %}
            fields.Add($"\"{{ fname }}\": {% if field['type'] == 'datetime' %}\"{% endif %}{% raw %}{{% endraw %}{{ fname }}{% if field['type'] == 'datetime' %}_{% endif %}{% raw %}}{% endraw %}{% if field['type'] == 'datetime' %}\"{% endif %}");
            {% else %}
            {% if type(field) == 'string' %}
            if ({{ fname }} != null) {
                {{ fname }} = JsonSerializer.Serialize({{ fname }}, {{ename}}.options);
            {% elif type(field) == 'DateTime' %}
            if ({{ fname }} != DateTime.MinValue) {
                string {{ fname }}_ = {{ fname }}.ToString("yyyy-MM-ddTHH:mm:ss.fffzzz");
            {% else %}
            if ({{ fname }}.HasValue)
            {% endif %}
                fields.Add($"\"{{ fname }}\": {% if field['type'] == 'datetime' %}\"{% endif %}{% raw %}{{% endraw %}{{ fname }}{% if field['type'] == 'datetime' %}_{% endif %}{% raw %}}{% endraw %}{% if field['type'] == 'datetime' %}\"{% endif %}");
            {% if type(field) in ('string', 'DateTime') %}
            {% raw %}            }
            {% endraw %}{% endif %}
            {% endif %}
            {% endif %}
            {% endfor %}
            string sfields = String.Join(", ", fields);
            string dt = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss.fffzzz");
            string sjson = $"{% raw %}{{{% endraw %}\"DateTime\": \"{dt}\", \"Event\": \"{Event}\", {sfields}{% raw %}}}{% endraw %}";
            return sjson;
        }
    }
    {% endfor %}
}